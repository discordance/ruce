use ruce::{ffi::{self}, ruce_types::{RealProcessorType, PluginProcessorImpl, PluginProcessor}};

// @TODO THIS SHOULD BE GENERATED BY THE CLIENT LIB VIA A MACRO
#[no_mangle]
#[allow(non_snake_case)]
unsafe fn GetPluginFactory() -> *mut ffi::IPluginFactory { 
    // @Placeholder
    let p = Box::new(PluginProcessorImpl(Box::new(RealProcessorType::new())));

    let pf: *mut ffi::IPluginFactory = ffi::GetPluginFactoryShim(Box::<PluginProcessorImpl>::into_raw(p));
    return pf;
}

// MAC obligatory entrypoint on mac
#[no_mangle]
#[allow(non_snake_case)]
fn bundleEntry(r: *mut ffi::CFBundleAlias) -> bool {
    return unsafe { ffi::bundleEntry(r) };
}

// MAC obligatory exitpoint on mac
#[no_mangle]
#[allow(non_snake_case)]
fn bundleExit() -> bool {
    return ffi::bundleExit();
}
